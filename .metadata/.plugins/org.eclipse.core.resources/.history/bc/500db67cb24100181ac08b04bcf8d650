package servlet;

import java.io.IOException;
import java.net.URI;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import org.glassfish.jersey.client.ClientConfig;
import org.glassfish.jersey.client.HttpUrlConnectorProvider;
import org.json.JSONException;
import org.json.JSONObject;

import data.SessionUser;
import data.User;
import servlet.encryptation.Encrypt;
/**
 * Servlet implementation class LoginSession
 */
@WebServlet("/LoginUser")
public class LoginUser extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public LoginUser() {
        super();
        // TODO Auto-generated constructor stub
    }
    private static URI getBaseURI() {
        //TODO change the port to whatever is the server running on
        return UriBuilder.fromUri("http://localhost:8080/SSW/").build();
    }
    
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse resp) throws ServletException, IOException {
		// TODO Auto-generated method stub
		resp.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse resp) throws ServletException, IOException {
		System.out.println("Logam user");
		String email = request.getParameter("LEmail");
		String password = request.getParameter("LPassword");
		//criptam parola
		if (!password.equals(null) && !password.equals("")){
			String hashedpassword = Encrypt.generateHash(password);
			password = hashedpassword;
			if(!email.equals(null) && !email.equals("") ) {
				System.out.println("Logam user bine bine");
				User user = new User();
				user.setEmail(email);
				user.setPassword(password);
				ClientConfig config = new ClientConfig();
		        //config.register(Custom);
		        Client client = ClientBuilder.newClient(config);
		        // Next line of code is a workaround for using PATCH
		        // A value of true declares that the client will try to set unsupported HTTP method to java.net.HttpURLConnection via reflection.
		        // PATCH workaround:
		        //    - alternative to client.property(HttpUrlConnectorProvider.SET_METHOD_WORKAROUND, true);
		        //    - also allow PATCH to have a response body
		        //    - see user1648865 response from https://stackoverflow.com/questions/17897171/how-to-have-a-patch-annotation-for-jax-rs 
		        client.property(HttpUrlConnectorProvider.SET_METHOD_WORKAROUND, true);
				WebTarget service = client.target(getBaseURI());
				Response response;
				//response = service.path("rest").path("login").
				response = service.path("rest").path("login").request().accept(MediaType.APPLICATION_XML).post(Entity.entity(user, MediaType.APPLICATION_XML), Response.class);
				System.out.println(response);
				response = service.path("rest").path("login").path(email).request().accept(MediaType.APPLICATION_JSON).get(Response.class);
				System.out.println(response.readEntity(String.class).toString());
				
				//JsonArray jsonArray = response.readEntity(String.class);
				
//				if (response.getStatus()==200){
//					System.out.println("Logam user checkuim");
//					HttpSession session = request.getSession();
//					session.setAttribute("username", email);
//					session.setAttribute("id", SessionUser.getInstance().getUser().getId());
//					System.out.println("id " + SessionUser.getInstance().getUser().getId());
//					resp.sendRedirect("index.jsp");
//				}else{
//					request.setAttribute("mesaj", "Incorrect email or password!");
//					request.getRequestDispatcher("login.jsp").forward(request, resp);
//				}
			}
			else{
				request.setAttribute("mesaj", "Fields are mandatory!");
				request.getRequestDispatcher("login.jsp").forward(request, resp);
			}
		}
		else {
			request.setAttribute("mesaj", "Pasword is compulsory!");
			request.getRequestDispatcher("index.jsp").forward(request, resp);
		}
		
		
		
		

		
	}

}
